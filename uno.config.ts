import { defineConfig } from 'unocss'
import { presetUno } from '@unocss/preset-uno'

export default defineConfig({
  rules: [
    [/^gtc-([\w-]+)$/, ([_, t]) => ({ display: 'grid', 'grid-template-columns': t.replace(/-/g, ' ') })],
    [/^gtr-([\w-]+)$/, ([_, t]) => ({ display: 'grid', 'grid-template-rows': t.replace(/-/g, ' ') })],
    [/^gac-([\w-]+)$/, ([_, t]) => ({ display: 'grid', 'grid-auto-flow': 'column', 'grid-auto-columns': t.replace(/-/g, ' ') })],
    [/^gar-([\w-]+)$/, ([_, t]) => ({ display: 'grid', 'grid-auto-flow': 'row', 'grid-auto-rows': t.replace(/-/g, ' ') })],
    [/^gap-(\d+)$/, ([_, g]) => ({ gap: `${g}px` })],
    ['gaf-c', { display: 'grid', 'grid-auto-flow': 'column' }],
    ['gaf-r', { display: 'grid', 'grid-auto-flow': 'row' }],
    ['fd-c', { display: 'flex', 'flex-direction': 'column' }],
    ['fd-r', { display: 'flex', 'flex-direction': 'row' }],
    ['fw-w', { 'flex-wrap': ' wrap' }],
    ['ai-s', { 'align-items': ' stretch' }],
    ['ai-b', { 'align-items': ' baseline' }],
    ['ai-c', { 'align-items': ' center' }],
    ['ai-fs', { 'align-items': ' flex-start' }],
    ['as-c', { 'align-self': ' center' }],
    ['h-100', { height: '100%' }],
    ['mw-100', { 'max-width': '100%' }],
    [/^h-(\d+)(p?)$/, ([_, num, p]) => ({ height: `${num}${p ? '%' : 'px'}` })],
    [/^w-(\d+)(p?)$/, ([_, num, p]) => ({ width: `${num}${p ? '%' : 'px'}` })],
    [/^pt-(\d+)$/, ([_, num]) => ({ 'padding-top': `${num}px` })],
    [/^pb-(\d+)$/, ([_, num]) => ({ 'padding-bottom': `${num}px` })],
    [/^pl-(\d+)$/, ([_, num]) => ({ 'padding-left': `${num}px` })],
    [/^pr-(\d+)$/, ([_, num]) => ({ 'padding-right': `${num}px` })],
    [/^ph-(\d+)$/, ([_, num]) => ({ 'padding-left': `${num}px`, 'padding-right': `${num}px` })],
    [/^pv-(\d+)$/, ([_, num]) => ({ 'padding-top': `${num}px`, 'padding-bottom': `${num}px` })],
    [/^p-(\d+)$/, ([_, num]) => ({ padding: `${num}px` })],
    [/^mt-(-?\d+)$/, ([_, num]) => ({ 'margin-top': `${num}px` })],
    [/^mb-(-?\d+)$/, ([_, num]) => ({ 'margin-bottom': `${num}px` })],
    [/^ml-(-?\d+)$/, ([_, num]) => ({ 'margin-left': `${num}px` })],
    [/^mr-(-?\d+)$/, ([_, num]) => ({ 'margin-right': `${num}px` })],
    [/^mh-(-?\d+)$/, ([_, num]) => ({ 'margin-left': `${num}px`, 'margin-right': `${num}px` })],
    [/^mv-(-?\d+)$/, ([_, num]) => ({ 'margin-top': `${num}px`, 'margin-bottom': `${num}px` })],
    [/^m-(-?\d+)$/, ([_, num]) => ({ margin: `${num}px` })],
    ['ml-a', { 'margin-left': ' auto' }],
    ['mr-a', { 'margin-right': ' auto' }],
    ['mt-a', { 'margin-top': ' auto' }],
    ['mb-a', { 'margin-bottom': ' auto' }],
    ['mh-a', { 'margin-left': ' auto', 'margin-right': ' auto' }],
    ['mv-a', { 'margin-top': ' auto', 'margin-bottom': ' auto' }],
    ['jc-fs', { 'justify-content': ' flex-start' }],
    ['jc-fe', { 'justify-content': ' flex-end' }],
    ['jc-c', { 'justify-content': ' center' }],
    ['jc-sb', { 'justify-content': ' space-between' }],
    ['f-0', { 'flex-shrink': '0', 'flex-grow': ' 0' }],
    [/^f-(\d+)$/, ([_, num]) => ({ flex: num })],
    [/^fg-(\d+)$/, ([_, num]) => ({ 'flex-grow': num })],
    [/^fs-(\d+)$/, ([_, num]) => ({ 'flex-shrink': num })],
    ['ta-c', { 'text-align': 'center' }],
    ['ta-l', { 'text-align': 'left' }],
    ['ws-n', { 'white-space': 'nowrap' }],
    ['ws-pw', { 'white-space': 'pre-wrap' }],
    ['ws-p', { 'white-space': 'pre' }],
    ['ta-r', { 'text-align': 'right' }],
    ['td-lt', { 'text-decoration': 'line-through' }],
    ['zi-1', { 'z-index': '1' }],
    ['c-p', { cursor: 'pointer' }],
    ['c-nsr', { cursor: 'ns-resize' }],
    ['o-a', { overflow: 'auto' }],
    ['ox-a', { 'overflow-x': 'auto' }],
    ['p-s', { position: 'sticky' }],
    ['p-r', { position: 'relative' }],
    ['p-f', { position: 'fixed' }],
    ['ta-n', { 'touch-action': 'none' }],
    ['c-i', { color: 'inherit' }],
    ['d-b', { display: 'block' }],
    ['d-c', { display: 'contents' }],
    ['d-i', { display: 'inline' }],
    [/^zi-(-?\d+)$/, ([_, num]) => ({ 'z-index': num })],
    [/^t-(\d+)$/, ([_, num]) => ({ top: `${num}px` })],
    [/^b-(\d+)$/, ([_, num]) => ({ bottom: `${num}px` })],
    [/^l-(\d+)$/, ([_, num]) => ({ left: `${num}px` })],
    [/^r-(\d+)$/, ([_, num]) => ({ right: `${num}px` })],
    ['center', { 'justify-content': 'center', 'align-items': 'center', 'text-align': 'center' }],
    [/^ty-(\d+)-(\d+)$/, ([_, size, height]) => ({ 'font-size': `${size}px`, 'line-height': `${height}px` })],
    [/^fw-(\d+)$/, ([_, weight]) => ({ 'font-weight': (+weight) * 100 })],
    ['bc-w', { 'background-color': '#fff' }],
    [/^bc-(\w+)$/, ([_, color]) => ({ 'background-color': `#${color}` })],
    [/^c-(\w+)$/, ([_, color]) => ({ color: `#${color}` })],
    [/^br(?:-(\d+))(?:-(\d+))?(?:-(\d+))?(?:-(\d+))?$/, ([_, ...rest]) => ({ 'border-radius': rest.filter(x => x).map(x => isNaN(+x) ? x : `${x}px`).join(' ') })],
    [/^br-(\d+)p$/, ([_, per]) => ({ 'border-radius': `${per}%` })],
    [/^mp(?:-(\d+))(?:-(\d+))?$/, ([_, ...rest]) => {
      const margin = rest.filter(x => x).map(x => isNaN(+x) ? x : `${-x}px`).join(' ')
      const padding = margin.replace(/-/g, '')
      return { padding, margin }
    }],
  ],
  presets: [
    presetUno(),
  ],
})
